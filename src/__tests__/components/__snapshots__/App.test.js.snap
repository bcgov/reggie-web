// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App
    authentication={
      Object {
        "isAuthenticated": true,
      }
    }
    job={
      Object {
        "status": "testStatus",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Layout>
        <Route
          component={[Function]}
          path="/registration"
        />
        <Route
          component={[Function]}
          path="/rocketChat"
        />
        <Route
          component={[Function]}
          path="/rejection"
        />
        <Route
          component={[Function]}
          path="/email"
        />
        <Route
          authentication={
            Object {
              "isAuthenticated": true,
            }
          }
          component={[Function]}
          path="/confirmation"
        />
        <Route
          authentication={
            Object {
              "isAuthenticated": true,
            }
          }
          component={[Function]}
          path="/verify"
        />
        <Route
          component={[Function]}
          path="/login"
        />
        <Route
          component={[Function]}
          path="/logout"
        />
        <Route
          authentication={
            Object {
              "isAuthenticated": true,
            }
          }
          component={[Function]}
          path="/"
        />
      </Layout>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Route
            component={[Function]}
            path="/registration"
          />,
          <Route
            component={[Function]}
            path="/rocketChat"
          />,
          <Route
            component={[Function]}
            path="/rejection"
          />,
          <Route
            component={[Function]}
            path="/email"
          />,
          <Route
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
            component={[Function]}
            path="/confirmation"
          />,
          <Route
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
            component={[Function]}
            path="/verify"
          />,
          <Route
            component={[Function]}
            path="/login"
          />,
          <Route
            component={[Function]}
            path="/logout"
          />,
          <Route
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
            component={[Function]}
            path="/"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "authorization": undefined,
            "component": [Function],
            "path": "/registration",
            "updateUser": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "authorization": undefined,
            "component": [Function],
            "path": "/rocketChat",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/rejection",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/email",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "authentication": Object {
              "isAuthenticated": true,
            },
            "component": [Function],
            "confirmEmail": undefined,
            "path": "/confirmation",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "authentication": Object {
              "isAuthenticated": true,
            },
            "authorization": undefined,
            "component": [Function],
            "path": "/verify",
            "verifyEmail": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/login",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": [Function],
            "path": "/logout",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "authentication": Object {
              "isAuthenticated": true,
            },
            "component": [Function],
            "path": "/",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Layout>
          <Route
            component={[Function]}
            path="/registration"
          />
          <Route
            component={[Function]}
            path="/rocketChat"
          />
          <Route
            component={[Function]}
            path="/rejection"
          />
          <Route
            component={[Function]}
            path="/email"
          />
          <Route
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
            component={[Function]}
            path="/confirmation"
          />
          <Route
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
            component={[Function]}
            path="/verify"
          />
          <Route
            component={[Function]}
            path="/login"
          />
          <Route
            component={[Function]}
            path="/logout"
          />
          <Route
            authentication={
              Object {
                "isAuthenticated": true,
              }
            }
            component={[Function]}
            path="/"
          />
        </Layout>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Route
              component={[Function]}
              path="/registration"
            />,
            <Route
              component={[Function]}
              path="/rocketChat"
            />,
            <Route
              component={[Function]}
              path="/rejection"
            />,
            <Route
              component={[Function]}
              path="/email"
            />,
            <Route
              authentication={
                Object {
                  "isAuthenticated": true,
                }
              }
              component={[Function]}
              path="/confirmation"
            />,
            <Route
              authentication={
                Object {
                  "isAuthenticated": true,
                }
              }
              component={[Function]}
              path="/verify"
            />,
            <Route
              component={[Function]}
              path="/login"
            />,
            <Route
              component={[Function]}
              path="/logout"
            />,
            <Route
              authentication={
                Object {
                  "isAuthenticated": true,
                }
              }
              component={[Function]}
              path="/"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "authorization": undefined,
              "component": [Function],
              "path": "/registration",
              "updateUser": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "authorization": undefined,
              "component": [Function],
              "path": "/rocketChat",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/rejection",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/email",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "authentication": Object {
                "isAuthenticated": true,
              },
              "component": [Function],
              "confirmEmail": undefined,
              "path": "/confirmation",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "authentication": Object {
                "isAuthenticated": true,
              },
              "authorization": undefined,
              "component": [Function],
              "path": "/verify",
              "verifyEmail": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/login",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "component": [Function],
              "path": "/logout",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "authentication": Object {
                "isAuthenticated": true,
              },
              "component": [Function],
              "path": "/",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
